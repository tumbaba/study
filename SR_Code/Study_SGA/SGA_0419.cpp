#include "main.h" // ◀────────────────────────────── 파일탐색기에서 위치를 변경할때 경로를 입력 예) header끼리 묶은 탐색기를 만들었을때 /header/main.h 


int num; //   ◀────────────────────────────── 전역변수 = 전체 사용가능한 변수 (다른 헤더파일에 되어있다면 다른 cpp파일에도 사용가능)

// 메인함수 밖에서 사용되는 것이 전역변수, 안에서 사용하는것이 지역변수

void swap(int nx, int ny); // ◀─────── 함수 선언

void swap(int nx, int ny)  // ◀─────── 함수 로직
{
	cout << "nx값은 현재 = " << nx << endl;
	cout << "ny값은 현재 = " << ny << endl;

	int nz;
	nz = nx;
	nx = ny;
	ny = nz;

	cout << "nx값은 현재 = " << nx << endl;
	cout << "ny값은 현재 = " << ny << endl;
}

int main() //  ◀────────────────────────────── 메인 실행되는 역할
{
	// extern  ◀────────────────────────────── 외부에서 사용할수 있도록 확장 지시어 : 예 extern int num;
	
	int x, y; // 선언
	x = 10, y = 20; // 초기화
	int z; // 값 설정없는 빈그릇 선언
	// z = 10; // 초기화

	/* 
			int = -1, 0, 1   ◀───────────────────────────────────────────────────────── 정수
			float = 0.1, 0.5, 0.9 소수점    0.1f, 0.2f   ◀────────────────────────────── 실수
	*/

	// cout << z << endl; // 줄바꿈 할때 ◀────────────────────────────── \n, endl; 같음

	// ────────────────── X와 y 값을 바뀔수있도록 ──────────────────

	/*
	cout << "x값은 현재 = " << x << endl;
	cout << "y값은 현재 = " << y << endl;
	
	
	z = x; // z에 x값을 입력               ◀─────── X = 10 y = 20 z = 10
	x = y; // x값에 y을 넣음               ◀─────── X = 20 y = 20 z = 10
	y = z; // y값이 z값을 넣음			  ◀─────── X = 20 y = 10 z = 10
	

	cout << "x값은 현재 = " << x << endl;
	cout << "y값은 현재 = " << y << endl;
	*/

	swap(x, y); // ◀───────────────────────────────────────────────────────── 함수 호출

	/*/
	cout << "함수 사용 후 x = " << x << endl;
	cout << "함수 사용 후 x = " << y << endl;
	*/

	// ─────────────── 포인터 ─────────────── 

	int* px = &x; // ◀───────────── 포인터 주소 int* = 인트형의 주소값 저장하는 변수 // x의 주소를 알고싶을때 &x
	
	

	// printf("%p\n", &x);       // ◀───────────── c언어
	cout << &x << endl;			 // ◀─────────────	c++
	cout << px << endl;			 // ◀─────────────	주소값을 갖은 px를 출력 (주소출력)
	cout << *px << endl;		 // ◀─────────────	해당되는 주소에 들어있는 값을 출력 (주소출력)
	

	int x1[2] = { 10,20 };		// 포인터 주소를 배열로 하는이유는 단체예약석 처럼 쭉 연속으로 하는것이라고 인식할것


	cout << &x <<"\t"<< &y << endl;
	cout << x1 << "\t" << &x1[0] << "\t" << &x1[1] << endl;
	
	return 0; //   ◀────────────────────────────── 정상적으로 실행됬다가 종료되는 것
}



// ─────────────────────────────────────────────────────── Enum  ───────────────────────────────────────────────────────
/*

// ──────────────────────────Enum 선언──────────────────────────
enum SCENE       // 열거형 enum (보통 대문자로 쓸것)
{
	// SUN, MON, TUE, WED, THU, FRI, SAT     // 배열처럼 0번부터 시작


	TITLE_SCENE = 0,      // 원하는 설정 씬들을 분리하여 설정할 수 있음
	MAIN_SCENE,
	OPTION_SCENE,
	BATTLE_SCENE,
	SCENE_MAX    // 마지막씬 MAX을 사용하는 팁


};                    // Switch 문에 case 대신 사용이 가능



// ──────────────────────────Enum 로직──────────────────────────
int Student(string stuName, int v1, int v2, int v3, int v4)  //학생의 이름점수 합계
{
	//변수 선언
	int sum = 0;
	std::string name;  // c언어에서는 char를 이용해서 한 글자를 사용하지만 string은 이름을 배열해서 저장해준다.
	int score[4] = { 0, }; // 4개 다 초기화됨

	//초기값
	name = stuName;
	score[0] = v1;		// 국어
	score[1] = v2;		// 영어
	score[2] = v3;		// 수학
	score[3] = v4;		// 과학

	sum = score[0] + score[1] + score[2] + score[3];

	cout << name << "\t" << score[0] << "\t" << score[1] << "\t" << score[2] << "\t" << score[3] << "\t" << sum << "\n";

	return sum;
}




*/